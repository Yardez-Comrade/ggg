import telebot
import time
from telebot import types
import requests
main_spisok_link = []
url = 'https://api.telegram.org/bot'
TOKEN_BOT = '5933528389:AAHAgyQwfYeq2DwYGwvZpltJ2zpIf5YV0_c'
bot = telebot.TeleBot(TOKEN_BOT)
channel_id_bye = '-1001516825876'
configuration = ''
# ~*~ coding: utf-8 ~*~
# For comrades <3
#   ___           _         ___    _____  _____
#  (  _ \ / \_/ \( )       (  _ \ (  _  )(_   _)
#  | (_) )|     || |       | (_) )| ( ) |/|| |
#  |  _ ( | (_) || |  _    |  _ ( | | | |_)| |
#  | (_) )| | | || |_( )   | (_) )| (_) |  | |
#  (____/ (_) (_)((___/    (____/ (_____)  ( )
#                (_)                       /(
#                                         (__)    by Yardez

print('ü•≥ START PROGRAMM ü•≥')

def main_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton("–ö–æ—Å—Ç—é–º")
    b = types.KeyboardButton("–ü–∏–¥–∂–∞–∫")
    c = types.KeyboardButton("–ü–∞–ª—å—Ç–æ")
    #d = types.KeyboardButton("–ü–æ–ª–æ")
    #f = types.KeyboardButton("–î–∂–∏–Ω—Å—ã")
    g = types.KeyboardButton("–°–æ—Ä–æ—á–∫–∞")
    markup.add(a,b)
    markup.add(c,g)
    return markup

def kostum_markup():
    global configuration
    configuration = 'kostum'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton("–ë–∏–∑–Ω–µ—Å")
    b = types.KeyboardButton("–°–≤–∞–¥–µ–±–Ω—ã–π")
    c = types.KeyboardButton("–í–µ—á–µ—Ä–Ω–∏–π")
    d = types.KeyboardButton("–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π")
    markup.add(a,b)
    markup.add(c,d)
    return markup

def pidshak_markup():
    global configuration
    configuration = 'pidshak'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton("–ë–∏–∑–Ω–µ—Å")
    b = types.KeyboardButton("–¢—Ä–µ–Ω–¥–∏")
    d = types.KeyboardButton("–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π")
    markup.add(a,b)
    markup.add(d)
    return markup

def palto_markup():
    global configuration
    configuration = 'palto'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton("–ë–∏–∑–Ω–µ—Å")
    b = types.KeyboardButton("–¢—Ä–µ–Ω–¥–∏")
    d = types.KeyboardButton("–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π")
    markup.add(a,b)
    markup.add(d)
    return markup

def sorocka_markup():
    global configuration
    configuration = 'sorocka'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton("–ë–∏–∑–Ω–µ—Å")
    b = types.KeyboardButton("–° –ø—Ä–∏–Ω—Ç–æ–º")
    d = types.KeyboardButton("–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π")
    markup.add(a,b)
    markup.add(d)
    return markup


def bye_markup_1():
    markup = types.InlineKeyboardMarkup()
    b = types.InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–∑ ‚è©", callback_data='>>')
    c = types.InlineKeyboardButton("üíº –ó–∞–∫–∞–∑–∞—Ç—å", callback_data='bye')
    markup.add(b)
    markup.add(c)
    return markup
def bye_markup_2():
    markup = types.InlineKeyboardMarkup()
    a = types.InlineKeyboardButton("‚óÄÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–∑", callback_data='<')
    b = types.InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–∑ ‚ñ∂Ô∏è", callback_data='>')
    c = types.InlineKeyboardButton("üíº –ó–∞–∫–∞–∑–∞—Ç—å", callback_data='bye')
    markup.add(a,b)
    markup.add(c)
    return markup
def bye_markup_3():
    markup = types.InlineKeyboardMarkup()
    a = types.InlineKeyboardButton("‚è™ –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–∑", callback_data='<<')
    c = types.InlineKeyboardButton("üíº –ó–∞–∫–∞–∑–∞—Ç—å", callback_data='bye')
    markup.add(a)
    markup.add(c)
    return markup
def markup_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ")
    b = types.KeyboardButton("üóÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥")
    c = types.KeyboardButton("üì¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –¢–ì")
    d = types.KeyboardButton("üìû –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫")
    markup.add(a, b)
    markup.add(c, d)
    return markup

def send_contact():
    markup_request = types.ReplyKeyboardMarkup(resize_keyboard=True)
    a = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è', request_contact=True)
    markup_request.add(a)
    return markup_request

def buy_item(message):
    global item
    try:
        username_user = message.from_user.username
        phone = str(message.contact).split(':')[1].split(',')[0]
        bot.send_message(channel_id_bye, text=f"‚úâÔ∏è –ù–æ–≤—ã–π –ó–∞–∫–∞–∑ üìç\nüôé‚Äç‚ôÇÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username_user}\nüì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\nüñá –¢–æ–≤–∞—Ä:\n{item}")
        bot.send_message(message.chat.id, text="üì´ –í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª —É—Å–ø–µ—à–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚úÖ", reply_markup=markup_menu())
    except IndexError:
        bot.send_message(message.chat.id, text="‚ùå –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n–õ–∏–±–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:( \n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ ;)", reply_markup=main_markup())
def check_user(id_user):
    with open('users.txt', 'r', encoding="utf-8") as f:
        for line in f.readlines():
            line = line.split(' :')
            if str(id_user) == line[0]: # –ù–∞–¥–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç —Ç–µ–∫—Å—Ç–∞ !! Str –∏–ª–∏ Int !
                return True
        else:
            return False

def work_file_main(itog):
    with open('main.txt', 'r', encoding="utf-8") as f:
        for line in f.readlines():
            line = line.split()
            try:
                if itog == line[0]:
                    return line[1]
            except Exception:
                pass

@bot.message_handler(commands=['start', 'Start'])
def start(message):
    # with open('users_bml.txt', 'a', encoding='utf-8') as write_f: # –ó–∞–ø–∏—Å—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    #     id_user = message.from_user.id
    #     name_user = message.from_user.first_name
    #     username_user = message.from_user.username
    #     result = check_user(id_user)
    #     if result: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –æ–∏ –≤ —Å–ø–∏—Å–∫–µ !
    #         pass # –¢–∞–∫–æ–π –ø–æ–ª–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å !
    #     else:
    #         write_f.write(f'\n{id_user} : {name_user} : @{username_user}')
    username_user = message.from_user.username
    bot.send_message(channel_id_bye, f'‚ùáÔ∏è –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ü•≥\nüôé‚Äç‚ôÇÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username_user}')
    bot.send_message(message.chat.id, text="""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {0.first_name}üëã!
–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ô –ü–û–®–ò–í –° –ü–ï–†–°–û–ù–ê–õ–¨–ù–û–ô –°–ö–ò–î–ö–û–ô -25%* 

‚û°Ô∏è –ù–ï–ú–ï–¶–ö–ò–ô –ë–†–ï–ù–î –° 20-–ò –õ–ï–¢–ù–ï–ô –ò–°–¢–û–†–ò–ï–ô 
‚û°Ô∏è –õ–£–ß–®–ò–ï –ê–ù–ì–õ–ò–ô–°–ö–ò–ï –ò –ò–¢–ê–õ–¨–Ø–ù–°–ö–ò–ï –¢–ö–ê–ù–ò
‚û°Ô∏è –í–´–ü–û–õ–ù–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê –¢–û–ß–ù–û –í –°–†–û–ö
‚û°Ô∏è –í–´–ï–ó–î–ù–û–ô –°–ï–†–í–ò–°

*–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–∫–∞–∑–µ –º—Ç–º""".format(message.from_user), reply_markup=main_markup())
    bot.send_photo(message.chat.id, 'https://disk.yandex.ru/i/nDAGFXPbmfmDjQ')

@bot.message_handler(content_types=['text'])
def main(message):
    global main_spisok_link, index_in_links, len_spisok, item, configuration, flag, main_spisok_link
    if message.text == "–ö–æ—Å—Ç—é–º":
        bot.send_photo(message.chat.id, 'https://disk.yandex.ru/i/NJQ3n8axfAB-xA', reply_markup=kostum_markup())
        flag = False
    elif message.text == "–ë–∏–∑–Ω–µ—Å" and configuration == 'kostum':
        main_spisok_link = ['https://disk.yandex.ru/i/Ad1gKhzuRHVAQA', 'https://disk.yandex.ru/i/aCInWWhqFfdgBQ', 'https://disk.yandex.ru/i/pjETA1SofuxHzw']
        flag = True
    elif message.text == "–°–≤–∞–¥–µ–±–Ω—ã–π" and configuration == 'kostum':
        main_spisok_link = ['https://disk.yandex.ru/i/MfCCc44DX2k9Ng', 'https://disk.yandex.ru/i/RdNQMXswh0dK5g', 'https://disk.yandex.ru/i/8Xa-Kh9zDrTJOQ']
        flag = True
    elif message.text == "–í–µ—á–µ—Ä–Ω–∏–π" and configuration == 'kostum':
        main_spisok_link = ['https://disk.yandex.ru/i/3SP7mC-QXaEj6Q', 'https://disk.yandex.ru/i/opj4ws0wba6knw']
        flag = True
    elif message.text == "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π" and configuration == 'kostum':
        main_spisok_link = ['https://disk.yandex.ru/i/9Rp8JDMZ8ZWoJg', 'https://disk.yandex.ru/i/n5SyXDwViF9-OQ', 'https://disk.yandex.ru/i/TFHn0NAXuvBbww']
        flag = True


    elif message.text == "–ü–∏–¥–∂–∞–∫":
        bot.send_photo(message.chat.id, 'https://disk.yandex.ru/i/PQOV-A_Q1Q6siw', reply_markup=pidshak_markup())
        flag = False
    elif message.text == "–ë–∏–∑–Ω–µ—Å" and configuration == 'pidshak':
        main_spisok_link = ['https://disk.yandex.ru/i/gE8xEUTbaJLRrw', 'https://disk.yandex.ru/i/uesSWZfSKL6l4A', 'https://disk.yandex.ru/i/zwG2F8N-WukiEQ']
        flag = True
    elif message.text == "–¢—Ä–µ–Ω–¥–∏" and configuration == 'pidshak':
        main_spisok_link = ['https://disk.yandex.ru/i/QTf03fkjarCXXA', 'https://disk.yandex.ru/i/qC2Ev-fON4DdiQ', 'https://disk.yandex.ru/i/0S0mcV0fNJqj9Q']
        flag = True
    elif message.text == "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π" and configuration == 'pidshak':
        main_spisok_link = ['https://disk.yandex.ru/i/kkRbW_ArrLqgag', 'https://disk.yandex.ru/i/z6OTl0D0xvGang', 'https://disk.yandex.ru/i/x7RQupp-gITBHQ']
        flag = True


    elif message.text == "–ü–∞–ª—å—Ç–æ":
        bot.send_photo(message.chat.id, 'https://disk.yandex.ru/i/rVVV1OUio-Uy5g', reply_markup=palto_markup())
        flag = False
    elif message.text == "–ë–∏–∑–Ω–µ—Å" and configuration == 'palto':
        main_spisok_link = ['https://disk.yandex.ru/i/OuiDuW_d0jD8sA', 'https://disk.yandex.ru/i/s8pms5zLnExUBA', 'https://disk.yandex.ru/i/xhyoPahj-qcNtg']
        flag = True
    elif message.text == "–¢—Ä–µ–Ω–¥–∏" and configuration == 'palto':
        main_spisok_link = ['https://disk.yandex.ru/i/RZwaMNOez-ghxw', 'https://disk.yandex.ru/i/G5fo421RtgBsag', 'https://disk.yandex.ru/i/-OmergFuV7Yn4Q']
        flag = True
    elif message.text == "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π" and configuration == 'palto':
        main_spisok_link = ['https://disk.yandex.ru/i/_-Dx1u1kakm24A', 'https://disk.yandex.ru/i/-t_I8dBvkH-VJA', 'https://disk.yandex.ru/i/TkXLVG85eNinDg']
        flag = True

    elif message.text == "–°–æ—Ä–æ—á–∫–∞":
        bot.send_photo(message.chat.id, 'https://disk.yandex.ru/i/a2JExk6tHTPG8g', reply_markup=sorocka_markup())
        flag = False
    elif message.text == "–ë–∏–∑–Ω–µ—Å" and configuration == 'sorocka':
        main_spisok_link = ['https://disk.yandex.ru/i/Ow-xmE0I53RKUw', 'https://disk.yandex.ru/i/sViiANwTDiF_3A', 'https://disk.yandex.ru/i/KroGpwJAiNIzXw']
        flag = True
    elif message.text == "–° –ø—Ä–∏–Ω—Ç–æ–º" and configuration == 'sorocka':
        main_spisok_link = ['https://disk.yandex.ru/i/qnHConaVyhpndA', 'https://disk.yandex.ru/i/KnQMdJI698QYpw', 'https://disk.yandex.ru/i/_Cy6Vw6ZfKpkNw']
        flag = True
    elif message.text == "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π" and configuration == 'sorocka':
        main_spisok_link = ['https://disk.yandex.ru/i/Mq0XL4FKU9XeOg', 'https://disk.yandex.ru/i/Hnl5Lc9qfqjXBg', 'https://disk.yandex.ru/i/_SsmcpdSwzyVgA']
        flag = True

    elif message.text == "üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ":
        # bot.delete_message(message.chat.id, message.message_id-1)
        # time.sleep(1)
        # bot.delete_message(message.chat.id, message.message_id)
        # bot.send_photo(message.chat.id, main_spisok_link[0], reply_markup=bye_markup_1())
        # index_in_links = 0
        # len_spisok = len(main_spisok_link)
        bot.send_message(message.chat.id, '‚Ü©Ô∏è –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∫–∞—Ç–∞–ª–æ–≥ üìÅ', reply_markup=main_markup())
        bot.send_photo(message.chat.id, 'https://disk.yandex.ru/i/nDAGFXPbmfmDjQ')
        flag = False
    elif message.text == "üóÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥":
        try:
            doc = open('bml__ –∑–µ–Ω—Ç–∞—Ü–∏—è_MTM_v2_c.pdf', 'rb')
            bot.send_document(message.chat.id, doc)
            bot.send_document(message.chat.id, "FILEID")
        except:
            pass
        flag = False
    elif message.text == "üì¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –¢–ì":
        flag = False
    elif message.text == "üìû –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫":
        markup = types.InlineKeyboardMarkup()
        SITE = types.InlineKeyboardButton("üåê BML Tailoring", url='http://bmlfg.beget.tech')
        markup.add(SITE)
        bot.send_message(message.chat.id, '–ù–∞—à —Å–∞–π—Ç', reply_markup=markup)
        flag = False

    if flag:
        index_in_links = 0
        bot.send_message(message.chat.id, text="üëî –í—Å–µ –¥–æ—Å—Ç–ø—É–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞:", reply_markup=markup_menu())
        bot.send_photo(message.chat.id, main_spisok_link[0], reply_markup=bye_markup_1())
        item = main_spisok_link[index_in_links]

        len_spisok = len(main_spisok_link)
        item = main_spisok_link[index_in_links]

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global index_in_links, len_spisok, item, main_spisok_link
    if call.data == "<" or call.data == "<<":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        index_in_links -= 1
        if index_in_links == 0:
            bot.send_photo(call.message.chat.id, main_spisok_link[index_in_links], reply_markup=bye_markup_1())
        else:
            bot.send_photo(call.message.chat.id, main_spisok_link[index_in_links], reply_markup=bye_markup_2())
        item = main_spisok_link[index_in_links]
    elif call.data == ">" or call.data == ">>":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        index_in_links += 1
        if index_in_links+1 == len_spisok:
            bot.send_photo(call.message.chat.id, main_spisok_link[index_in_links], reply_markup=bye_markup_3())
        else:
            bot.send_photo(call.message.chat.id, main_spisok_link[index_in_links], reply_markup=bye_markup_2())
        item = main_spisok_link[index_in_links]
    elif call.data == "bye":
        bot.send_message(call.message.chat.id, text='üìû –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —á—Ç–æ–±—ã –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏.', reply_markup=send_contact())
        bot.register_next_step_handler(call.message, buy_item)
        # bot.answer_callback_query(call.id, text="üë®‚Äçüíº –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ–ª—å–∫–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è ‚è∞")
    username_user = call.message.chat.username
    print(f'@{username_user} ===> {item}')
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        pass